#!/bin/bash

# Exit on any error
set -e

# Step 1: Define a function for displaying exit messages
exit_message() {
    echo "❌ Oops! There was an error during the script execution and the process stopped. No worries!"
    echo "🔄 You can try to run the script from scratch again."
    echo "🛠️ If you still receive an error, you may want to proceed manually, step by step instead of using the auto-installer."
}

# Step 2: Set a trap to call exit_message on any error
trap exit_message ERR

# Step 3: Welcome
echo "✨ This script will install your Quilibrium node as a service and start it. ✨"
echo "Made with ❤️ by 0xOzgur.eth (edited by LaMat)"
echo "Processing... ⏳"
sleep 7  # Add a 7-second delay

# Step 4: Download Ceremonyclient
echo "⏳ Downloading Ceremonyclient..."
sleep 1  # Add a 1-second delay
cd ~
git clone https://github.com/QuilibriumNetwork/ceremonyclient.git
git checkout release

# Step 9: Build Ceremonyclient qClient
echo "⏳Building qCiient"
sleep 1  # Add a 1-second delay
cd ~/ceremonyclient/client
GOEXPERIMENT=arenas go build -o qclient main.go

# Get the system architecture
ARCH=$(uname -m)

# Step10.1:Determine the ExecStart line based on the architecture
if [ "$ARCH" = "x86_64" ]; then
    EXEC_START="/root/ceremonyclient/node/node-1.4.18-linux-amd64"
elif [ "$ARCH" = "aarch64" ]; then
    EXEC_START="/root/ceremonyclient/node/node-1.4.18-linux-arm64"
elif [ "$ARCH" = "arm64" ]; then
    EXEC_START="/root/ceremonyclient/node/node-1.4.18-darwin-arm64"
else
    echo "Unsupported architecture: $ARCH"
    exit 1
fi

# Step10.2:Create Ceremonyclient Service
echo "⏳ Re-Creating Ceremonyclient Service"
sleep 2  # Add a 2-second delay
rm /lib/systemd/system/ceremonyclient.service
sudo tee /lib/systemd/system/ceremonyclient.service > /dev/null <<EOF
[Unit]
Description=Ceremony Client Go App Service

[Service]
Type=simple
Restart=always
RestartSec=5s
WorkingDirectory=/root/ceremonyclient/node
ExecStart=$EXEC_START

[Install]
WantedBy=multi-user.target
EOF

# Step 8: Start the ceremonyclient service
echo "✅ Starting Ceremonyclient Service"
sleep 2  # Add a 2-second delay
systemctl enable ceremonyclient
service ceremonyclient start

# Step 9: Final messages
echo "🎉 Now your node is starting!"
echo "🕒 Let it run for at least 30 minutes to generate your keys."
echo ""
echo "🔐 You can logout of your server if you want and login again later."
echo "🔒 After 30 minutes, backup your keys.yml and config.yml files."
echo "ℹ️ More info about this in the online guide: https://iri.quest/quilibrium-node-guide"
echo ""
echo "📜 Now I will show the node log below..."
echo "To exit the log, just type CTRL +C."

# Step 10: See the logs of the ceremonyclient service
sleep 5  # Add a 5-second delay
sudo journalctl -u ceremonyclient.service -f --no-hostname -o cat
